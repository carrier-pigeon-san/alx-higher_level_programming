>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> mat1 = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> mat2 = [
...     [7.89, 3.45, 1.23],
...     [9.76, 5.67, 8.54]
... ]
>>> matrix_divided(mat1, 6)
[[0.17, 0.33, 0.5], [0.67, 0.83, 1.0]]
>>> matrix_divided(mat1, 3.42)
[[0.29, 0.58, 0.88], [1.17, 1.46, 1.75]]
>>> matrix_divided(mat2, 6)
[[1.31, 0.58, 0.2], [1.63, 0.94, 1.42]]
>>> matrix_divided(mat2, 3.42)
[[2.31, 1.01, 0.36], [2.85, 1.66, 2.5]]
>>> matrix_divided(mat1, -6)
[[-0.17, -0.33, -0.5], [-0.67, -0.83, -1.0]]
>>> matrix_divided(mat1, -3.42)
[[-0.29, -0.58, -0.88], [-1.17, -1.46, -1.75]]
>>> matrix_divided(mat2, -6)
[[-1.31, -0.58, -0.2], [-1.63, -0.94, -1.42]]
>>> matrix_divided(mat2, -3.42)
[[-2.31, -1.01, -0.36], [-2.85, -1.66, -2.5]]
>>> matrix_divided(mat1, "word")
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided(mat1, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided(5, 6)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> mat3 = [
...     [1, 2, 3],
...     [4, 5]
... ]
>>> matrix_divided(mat3, 6)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(mat1)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided(mat1, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
